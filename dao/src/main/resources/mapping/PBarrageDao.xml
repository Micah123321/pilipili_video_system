<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shield.pilipili.dao.PBarrageDao">
  <resultMap id="BaseResultMap" type="com.shield.pilipili.pojo.PBarrage">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="video_id" jdbcType="INTEGER" property="videoId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="videotime" jdbcType="TIME" property="videoTime" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, video_id, content, videotime, createTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from p_barrage
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="getBarrCountByUserId" resultType="java.lang.Integer">
    SELECT
      COUNT(content)
    FROM
      `pili`.`p_barrage` b ,p_videos v
    WHERE  v.video_pv=b.video_id and v.video_userid=#{id}
    GROUP BY v.`video_userid`
  </select>
  <select id="getBarrCountByDate" resultType="com.shield.pilipili.pojo.PBarrage">
    SELECT
      b.createTime,COUNT(content) as barrCount
    FROM
      `pili`.`p_barrage` b ,p_videos v
    WHERE  v.video_pv=b.video_id AND v.`video_userid`=#{userId}
    GROUP BY v.`video_userid`,DATE_FORMAT(b.createTime,'%Y-%m-%d')
  </select>
  <select id="getBarrByPv" resultType="com.shield.pilipili.pojo.PBarrage">
    SELECT
      `id`,
      `user_id` userId,
      `video_id` videoId,
      `content`,
      TIME_TO_SEC(`videotime`) videoTimeSecond,
      `videotime` videoTime,
      `createTime`,
      `color`,
      `size`,
      `post_ip` postIp,
      `type`
    FROM
      `pili`.`p_barrage`
    WHERE video_id=#{pv}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from p_barrage
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.shield.pilipili.pojo.PBarrage" useGeneratedKeys="true">
    INSERT INTO `pili`.`p_barrage` (
      `id`,
      `user_id`,
      `video_id`,
      `content`,
      `videotime`,
      `createTime`,
      `color`,
      `size`,
      `post_ip`,
      `type`
    )
    VALUES
    (
      default ,
      #{userId},
      #{videoId},
      #{content},
      #{updateSecond},
      now(),
      #{color},
      null,
      null,
      #{type}
    ) ;
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.shield.pilipili.pojo.PBarrage" useGeneratedKeys="true">
    insert into p_barrage
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="videoId != null">
        video_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="videotime != null">
        videotime,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="videoId != null">
        #{videoId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="videotime != null">
        #{videotime,jdbcType=TIME},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shield.pilipili.pojo.PBarrage">
    update p_barrage
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="videoId != null">
        video_id = #{videoId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="videotime != null">
        videotime = #{videotime,jdbcType=TIME},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shield.pilipili.pojo.PBarrage">
    update p_barrage
    set user_id = #{userId,jdbcType=INTEGER},
      video_id = #{videoId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      videotime = #{videotime,jdbcType=TIME},
      createTime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>